// <auto-generated />
using System;
using ApiParaLocalizarTransporte.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiParaLocalizarTransporte.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ApiParaLocalizarTransporte.Models.Linha", b =>
                {
                    b.Property<int>("LinhaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LinhaId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("LinhaId");

                    b.ToTable("linhas");
                });

            modelBuilder.Entity("ApiParaLocalizarTransporte.Models.Parada", b =>
                {
                    b.Property<int>("ParadaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ParadaId"));

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(10,7)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("ParadaId");

                    b.ToTable("paradas");
                });

            modelBuilder.Entity("ApiParaLocalizarTransporte.Models.PosicaoVeiculo", b =>
                {
                    b.Property<int>("PosicaoVeiculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PosicaoVeiculoId"));

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(10,7)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(10,7)");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.HasKey("PosicaoVeiculoId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("posicaoVeiculos");
                });

            modelBuilder.Entity("ApiParaLocalizarTransporte.Models.Veiculo", b =>
                {
                    b.Property<int>("VeiculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("VeiculoId"));

                    b.Property<int?>("LinhaId")
                        .HasColumnType("int");

                    b.Property<int>("LinhdaId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("VeiculoId");

                    b.HasIndex("LinhaId");

                    b.ToTable("veiculos");
                });

            modelBuilder.Entity("LinhaParada", b =>
                {
                    b.Property<int>("LinhasLinhaId")
                        .HasColumnType("int");

                    b.Property<int>("ParadasParadaId")
                        .HasColumnType("int");

                    b.HasKey("LinhasLinhaId", "ParadasParadaId");

                    b.HasIndex("ParadasParadaId");

                    b.ToTable("LinhaParada");
                });

            modelBuilder.Entity("ApiParaLocalizarTransporte.Models.PosicaoVeiculo", b =>
                {
                    b.HasOne("ApiParaLocalizarTransporte.Models.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("ApiParaLocalizarTransporte.Models.Veiculo", b =>
                {
                    b.HasOne("ApiParaLocalizarTransporte.Models.Linha", "Linha")
                        .WithMany()
                        .HasForeignKey("LinhaId");

                    b.Navigation("Linha");
                });

            modelBuilder.Entity("LinhaParada", b =>
                {
                    b.HasOne("ApiParaLocalizarTransporte.Models.Linha", null)
                        .WithMany()
                        .HasForeignKey("LinhasLinhaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiParaLocalizarTransporte.Models.Parada", null)
                        .WithMany()
                        .HasForeignKey("ParadasParadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
